{"version":3,"sources":["assets/logo_transparent.png","lib/components/ErrorBanner/index.tsx","lib/components/AppHeaderSkeleton/index.tsx","lib/components/PageSkeleton/index.tsx","lib/utils/index.ts","lib/components/ListingCard/index.tsx","lib/graphql/queries/AuthUrl/index.ts","lib/graphql/queries/User/index.ts","lib/graphql/queries/Listing/index.ts","lib/graphql/queries/Listings/index.ts","lib/graphql/globalTypes.ts","sections/Listings/components/ListingSkeleton/index.tsx","sections/Listings/components/ListingsFilters/index.tsx","sections/Listings/components/ListingsPagination/index.tsx","sections/Listings/index.tsx","sections/Listing/components/ListingDetails/index.tsx","sections/Listing/components/ListingBookings/index.tsx","sections/Listing/components/ListingCreateBooking/index.tsx","lib/graphql/mutations/LogIn/index.ts","lib/graphql/mutations/LogOut/index.ts","lib/graphql/mutations/HostListing/index.ts","lib/graphql/mutations/ConnectStripe/index.ts","lib/graphql/mutations/DisconnectStripe/index.ts","lib/graphql/mutations/CreateBooking/index.ts","sections/Listing/components/ListingCreateBookingModal/index.tsx","sections/Listing/index.tsx","sections/Home/components/HomeTop/index.tsx","sections/Home/components/HomePremiumListings/index.tsx","sections/Home/components/HomeListSkeleton/index.tsx","sections/Home/index.tsx","sections/Host/index.tsx","sections/NotFound/index.tsx","sections/User/components/UserProfile/index.tsx","sections/User/components/UserListings/index.tsx","sections/User/components/UserBookings/index.tsx","sections/User/index.tsx","sections/LogIn/index.tsx","sections/AppHeader/components/MenuItems/index.tsx","sections/AppHeader/index.tsx","sections/Stripe/index.tsx","serviceWorker.ts","index.tsx","sections/Home/assets/phuket.jpg","sections/Home/assets/bkk.jpg","sections/Home/assets/chaingmai.jpg","sections/Home/assets/ubon.jpeg","sections/Home/assets/krabi.jpeg","sections/Home/assets/songkhla.jpeg"],"names":["module","exports","ErrorBanner","message","description","banner","closable","type","className","AppHeaderSkeleton","src","Logo","alt","PageSkeleton","skeletonParagraph","active","paragraph","rows","formatPricing","price","Intl","NumberFormat","style","currency","currencyDisplay","format","daysInMonth","date","Date","getFullYear","getMonth","getDate","displaySuccessNotification","notification","placement","marginTop","displayErrorMessage","error","Text","Typography","Title","ListingCard","Card","Meta","listing","title","image","address","numOfGuests","hoverable","cover","height","level","width","strong","ellipsis","UserOutlined","fontSize","color","AUTH_URL","gql","USER","LISTING","ListingType","ListingsFilter","LISTINGS","ListingsSkeleton","grid","gutter","xs","md","sm","lg","xl","xxl","dataSource","renderItem","Item","loading","Option","Select","ListingsFilters","filter","setFilter","value","onChange","PRICE_LOW_TO_HIGH","PRICE_HIGH_TO_LOW","ListingsPagination","total","page","limit","setPage","current","defaultPageSize","hideOnSinglePage","showLessItems","Content","Layout","Paragraph","Listings","match","locationRef","useRef","params","location","useState","useQuery","skip","variables","data","useEffect","listings","listingsRegion","region","listingsSectionEle","result","length","offsetTop","to","id","mark","listingsRegoinEle","ListingDetails","city","host","backgroundImage","align","size","expandable","avatar","name","ListingBookings","listingBookings","bookingPage","setBookingPage","listingBooking","undefined","locale","emptyText","pagination","listingsBooking","bookingHistory","checkIn","checkOut","tenant","shape","listingBookingEle","ListingCreateBooking","viewer","checkOutDate","bookingsIndex","setModalVisible","checkInDate","setCheckInDate","setCheckOutDate","bookingsIndexJson","JSON","parse","viewerIsHost","checkInInputDisabled","hasWallet","checkOutInputDisable","buttonDisabled","buttonMessage","disableBeforeCurrentDate","currentDate","isBefore","moment","endOf","year","month","day","Boolean","dateIsBooked","disabled","disabledDate","checkInValue","onOpenChange","showToday","checkOutValue","selectedCheckOutDate","dateCursor","add","verifyCheckoutBookingDate","onClick","LOG_IN","LOG_OUT","HOST_LISTING","CONNECT_STRIPE","DISCONNECT_STRIPE","CREATE_BOOKING","WrappedListingCreateBookingModal","injectStripe","modalVisible","handleListingRefetch","stripe","clearBookingDate","useMutation","onCompleted","onError","createBooking","daysBookedDiff","diff","listingPrice","handleCreateBooking","a","createToken","stripeToken","token","input","source","visible","centered","footer","onCancel","justify","textAlign","hidePostalCode","Listing","bookingsPage","setBookingsPage","refetch","ErrorBoundary","bookings","listingDataElement","listingBookingsElement","listingCreateBookingEle","listingCreateBookingModalEle","Search","Input","HomeTop","onSearch","placeholder","enterButton","bordered","Phuket","Bkk","ChaingMai","Ubon","HomePremiumListings","HomeListSkeleton","Home","history","trimValue","trim","push","Songkhla","Krabi","Form","Host","useForm","form","imageLoading","setImageLoading","imageBase64Value","setImageBase64Value","hostListing","layout","onFinish","values","fullAddress","state","postalCode","rules","required","label","Group","Button","HOUSE","HomeTwoTone","APARTMENT","BankTwoTone","min","extra","maxLength","TextArea","listType","customRequest","file","onSuccess","setTimeout","showUploadList","beforeUpload","beforeImageUpload","action","info","status","originFileObj","getBase64Value","LoadingOutlined","PlusOutlined","htmlType","fileIsValidImage","fileIsValidSize","img","callback","reader","FileReader","readAsDataURL","onload","NotFound","stripeAuthUrl","process","UserProfile","user","viewerIsUser","setViewer","handleUserRefetch","disconnectStripe","additionalDetails","income","block","window","href","target","rel","additionalDetailSection","contact","UserListings","userListings","listingsPage","setListingsPage","userListingsList","position","marginBottom","UserBookings","userBookings","userBookingsList","userBooking","bookignHistory","User","stripeErrorBanner","URL","searchParams","get","userProfileElement","userListingsElement","userBookingsElement","LogIn","client","useApolloClient","logIn","sessionStorage","setItem","loginData","logInLoading","logInError","logInRef","code","handleAuth","query","authUrl","console","log","tip","viewerId","loginErrorBannerEle","role","aria-label","GooglePlusCircleFilled","Menu","SubMenu","MenuItems","logOut","removeItem","subMenuLogin","key","LogoutOutlined","mode","selectable","HomeOutlined","GlobalOutlined","AppHeader","withRouter","search","setSearch","pathname","pathnameSubstr","split","includes","e","Stripe","connectStripe","connectStipeRef","replace","hostname","ApolloClient","uri","request","operation","getItem","setContext","headers","initialViewer","didRequest","App","logInBannerEle","apiKey","exact","path","component","render","props","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5a1f1af8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_transparent.24a96c01.png\";","import React, { FC } from \"react\";\nimport { Alert } from \"antd\";\ninterface Props {\n  message?: string;\n  description?: string;\n}\n\nexport const ErrorBanner: FC<Props> = ({\n  message = \"Opps Something went wrong....\",\n  description = \"Look like something went wrong.Please check your connection and try again later.\",\n}) => {\n  return (\n    <Alert\n      banner\n      closable\n      message={message}\n      description={description}\n      type=\"error\"\n      className=\"error-alert\"\n    />\n  );\n};\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../../../assets/logo_transparent.png\";\n\nexport const AppHeaderSkeleton = () => {\n  return (\n    <div className=\"menu-bar-container\">\n      <div className=\"menu-bar\">\n        <div className=\"logo\">\n          {\" \"}\n          <img className=\"logo__img\" src={Logo} alt=\"\"/>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Skeleton } from \"antd\";\n\n\nexport const PageSkeleton = () => {\nconst skeletonParagraph = (\n    <Skeleton\n    active\n    paragraph={{rows: 4}}\n    className=\"page-skeleton\"\n    />\n)\n    return (\n        <>\n        {skeletonParagraph}\n        {skeletonParagraph}\n        {skeletonParagraph}\n        </>\n    )\n}","import { message, notification } from \"antd\";\n\nexport const formatPricing = (price: number) =>\n  Intl.NumberFormat(\"th-TH\", {\n    style: \"currency\",\n    currency: \"THB\",\n    currencyDisplay: \"symbol\",\n  }).format(price / daysInMonth());\nexport const formatIncome = (price: number) =>\n  Intl.NumberFormat(\"th-TH\", { style: \"currency\", currency: \"THB\" }).format(\n    price\n  );\nexport const daysInMonth = () => {\n  const date = new Date();\n  let lastDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  return lastDate.getDate();\n};\nexport const displaySuccessNotification = (\n  message: string,\n  description?: string\n) => {\n  return notification[\"success\"]({\n    message,\n    description,\n    placement: \"topLeft\",\n    style: {\n      marginTop: 50,\n    },\n  });\n};\n\nexport const displayErrorMessage = (error: string) => {\n  return message.error(error);\n};\n","import React, { FC } from \"react\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { Card, Typography } from \"antd\";\n\nimport {formatPricing} from '../../utils'\nimport \"./index.scss\";\ninterface Props {\n  listing: {\n    id: string;\n    title: string;\n    image: string;\n    address: string;\n    price: number;\n    numOfGuests: number;\n  };\n}\n\nconst { Text, Title } = Typography;\nconst {Meta} = Card\n\nexport const ListingCard: FC<Props> = ({ listing }) => {\n  const { title, image, address, price, numOfGuests } = listing;\n  return (\n    <Card\n      hoverable\n      \n      cover={<img src={image} alt={title}     style={{ height: '240px' }} />}\n    >\n      <div>\n        <div className=\"listing-card__description\">\n          <Title level={4}>\n            {formatPricing(price)}\n            <span>/day</span>\n          </Title>\n          <Text style={{width: '100%'}}  strong ellipsis>\n            {title}\n          </Text>\n          <Text style={{width: '100%'}} strong ellipsis>\n            {address}\n          </Text>\n        </div>\n        <div className=\"listing-card__guest-container\">\n          <UserOutlined style={{fontSize: '13px',color: '#29bdc1'}} className=\"svg\" />\n          <Text>{numOfGuests} guests</Text>\n        </div>\n      </div>\n    </Card>\n  );\n};\n","import {gql} from 'apollo-boost'\n\nexport const AUTH_URL = gql`\n    query AuthUrl {\n        authUrl\n    }\n`","import { gql } from \"apollo-boost\";\n\nexport const USER = gql`\n  query User($id: ID!, $bookingsPage: Int!, $listingsPage: Int!, $limit: Int!) {\n    user(id: $id) {\n      id\n      name\n      avatar\n      contact\n      hasWallet\n      income\n      bookings(limit: $limit, page: $bookingsPage) {\n        total\n        result {\n          id\n          listing {\n            id\n            title\n            image\n            address\n            price\n            numOfGuests\n          }\n          checkIn\n          checkOut\n        }\n      }\n      listings(limit: $limit, page: $listingsPage) {\n        total\n        result {\n          id\n          title\n          image\n          address\n          price\n          numOfGuests\n        }\n      }\n    }\n  }\n`;\n","import {gql} from 'apollo-boost'\n\nexport const LISTING = gql`\n    query Listing($id: ID!,$bookingsPage: Int!,$limit: Int!) {\n        listing(id: $id) {\n            id\n            title\n            description\n            image\n            host {\n                id\n                name\n                avatar\n                hasWallet\n            }\n            type\n            address\n            city\n            bookings(limit: $limit,page: $bookingsPage ){\n                total\n                result{\n                    id\n                    tenant {\n                        id\n                        name\n                        avatar\n                    }\n                    checkIn\n                    checkOut\n                }\n            }\n            bookingsIndex\n            price\n            numOfGuests\n        }\n    }\n`","import { gql } from \"apollo-boost\";\nexport const LISTINGS = gql`\n  query Listings(\n    $location: String\n    $filter: ListingsFilter!\n    $limit: Int!\n    $page: Int!\n  ) {\n    listings(location: $location, filter: $filter, limit: $limit, page: $page) {\n      region\n      total\n      result {\n        id\n        title\n        image\n        address\n        price\n        numOfGuests\n      }\n    }\n  }\n`;\n","/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\nexport enum ListingType {\n  APARTMENT = \"APARTMENT\",\n  HOUSE = \"HOUSE\",\n}\n\nexport enum ListingsFilter {\n  PRICE_HIGH_TO_LOW = \"PRICE_HIGH_TO_LOW\",\n  PRICE_LOW_TO_HIGH = \"PRICE_LOW_TO_HIGH\",\n}\n\nexport interface ConnectStripeInput {\n  code: string;\n}\n\nexport interface CreateBookingInput {\n  id: string;\n  source: string;\n  checkIn: string;\n  checkOut: string;\n}\n\nexport interface HostListingInput {\n  title: string;\n  description: string;\n  image: string;\n  type: ListingType;\n  address: string;\n  price: number;\n  numOfGuests: number;\n}\n\nexport interface LogInInput {\n  code?: string | null;\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n","import React from 'react'\nimport {Card, List, Skeleton} from 'antd'\n\nexport const ListingsSkeleton = () => {\n    const emptyData = [{}, {}, {}, {},{}, {}, {}, {}]\n    return (\n        <div className=\"listings__skeleton\">\n            <Skeleton paragraph={{rows: 0}}/>\n            <List\n           grid={{ gutter: 10, xs: 1,md:2, sm: 2, lg: 4 , xl: 4,xxl:4}}\n                dataSource={emptyData}\n                className=\"listings__skeleton-flex\"\n                renderItem={() => (\n                    <List.Item>\n                        <Card\n                              cover={<div className=\"home__skeleton-image\"/>}\n                              loading/>\n                    </List.Item>\n                )}\n            />\n        </div>\n    )\n}","import React from 'react'\nimport { Select } from 'antd'\nimport { ListingsFilter } from '../../../../lib/graphql/globalTypes'\n\ninterface Props {\n    filter: ListingsFilter;\n    setFilter: (filter: ListingsFilter) => void\n}\n\nconst {Option} = Select\nexport const ListingsFilters = ({filter, setFilter}: Props) => {\n    return (\n        <div className=\"listings__seletor\">\n            <span>Filter By</span>\n            <Select value={filter} onChange={(filter: ListingsFilter) => setFilter(filter)}>\n            <Option value={ListingsFilter.PRICE_LOW_TO_HIGH}>Price: Low to High</Option>\n                <Option value={ListingsFilter.PRICE_HIGH_TO_LOW}>Price: High to Low</Option>\n                </Select>\n        </div>\n    )\n}","import React from 'react'\nimport { Pagination } from 'antd'\n\ninterface Props{\n    total: number;\n    page: number;\n    limit: number;\n    setPage: (page:number) => void\n}\n\nexport const ListingsPagination = ({total, page, limit,setPage}: Props) => {\n    return (\n        <Pagination\n            current={page}\n            total={total}\n            defaultPageSize={limit}\n            hideOnSinglePage\n            showLessItems\n            onChange={(page: number) => setPage(page)}\n            className=\"listings__pagination\"\n    />\n\n    )\n}","import React, { useState, useRef, useEffect } from \"react\";\nimport { RouteComponentProps, Link, match } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Affix, Layout, List, Typography } from \"antd\";\nimport { ListingCard, ErrorBanner } from \"../../lib/components\";\nimport { LISTINGS } from \"../../lib//graphql/queries\";\nimport {\n  Listings as ListingsData,\n  ListingsVariables,\n} from \"../../lib/graphql/queries/Listings/__generated__/Listings\";\nimport { ListingsFilter } from \"../../lib/graphql/globalTypes\";\nimport {\n  ListingsFilters,\n  ListingsPagination,\n  ListingsSkeleton,\n} from \"./components\";\nimport \"./index.scss\";\n\ninterface MatchParams {\n  location: string;\n}\n//useRef จะไม่เปลี่ี่ยนคค่า จนกว่า cyycle ของ re-render component จะจบ\nconst { Content } = Layout;\nconst { Title, Paragraph, Text } = Typography;\nconst PAGE_LIMIT = 8;\nexport const Listings = ({ match }: RouteComponentProps<MatchParams>) => {\n  const locationRef = useRef(match.params.location);\n  const [filter, setFilter] = useState(ListingsFilter.PRICE_HIGH_TO_LOW);\n  const [page, setPage] = useState(1);\n\n  const { loading, data, error } = useQuery<ListingsData, ListingsVariables>(\n    LISTINGS,\n    {\n      skip: locationRef.current !== match.params.location && page !== 1,\n      variables: {\n        location: match.params.location,\n        filter,\n        limit: PAGE_LIMIT,\n        page,\n      },\n    }\n  );\n  useEffect(() => {\n    setPage(1);\n    locationRef.current = match.params.location;\n  }, [match.params.location]);\n  if (loading) {\n    return (\n      <Content>\n        <ListingsSkeleton />\n      </Content>\n    );\n  }\n  if (error) {\n    return (\n      <Content>\n        <ErrorBanner description=\"the things that you searching we can't find it or have encountered error\" />\n        <ListingsSkeleton />\n      </Content>\n    );\n  }\n  const listings = data ? data.listings : null;\n  const listingsRegion = listings ? listings.region : null;\n\n  const listingsSectionEle =\n    listings && listings.result.length ? (\n      <div>\n        <Affix offsetTop={64}>\n          <ListingsPagination\n            total={listings.total}\n            page={page}\n            limit={PAGE_LIMIT}\n            setPage={setPage}\n          />\n          <ListingsFilters filter={filter} setFilter={setFilter} />\n        </Affix>\n        <List\n          grid={{ gutter: 10, xs: 1, md: 2, sm: 2, lg: 3, xl: 4, xxl: 4 }}\n          dataSource={listings.result}\n          renderItem={(listing) => (\n            <List.Item>\n              <Link to={`/listing/${listing.id}`}>\n                <ListingCard listing={listing} />\n              </Link>\n            </List.Item>\n          )}\n        ></List>\n      </div>\n    ) : (\n      <div>\n        <Paragraph>\n          It appears that no listings have yet\n          <Text mark>\"{listingsRegion}\"</Text>\n          <Paragraph>\n            If you want to be first person to created please{\" \"}\n            <Link to=\"/host\">click in this area </Link>{\" \"}\n          </Paragraph>\n        </Paragraph>\n      </div>\n    );\n\n  const listingsRegoinEle = listingsRegion ? (\n    <Title level={3} className=\"listings__title\">\n      Results for \"{listingsRegion}\"\n    </Title>\n  ) : null;\n  return (\n    <Content className=\"listings__container\">\n      {listingsRegoinEle}\n      {listingsSectionEle}\n    </Content>\n  );\n};\n","import React from \"react\";\nimport { Avatar, Divider, Row, Tag, Typography } from \"antd\";\nimport { EnvironmentOutlined } from \"@ant-design/icons/lib\";\nimport { Listing as ListingData } from \"../../../../lib/graphql/queries/Listing/__generated__/Listing\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  listing: ListingData[\"listing\"];\n}\n\nconst { Paragraph, Title } = Typography;\n\nexport const ListingDetails = ({ listing }: Props) => {\n  const {\n    title,\n    description,\n    image,\n    type,\n    address,\n    city,\n    numOfGuests,\n    host,\n  } = listing;\n  return (\n    <div>\n      <div\n        style={{ backgroundImage: `url(${image})` }}\n        className=\"listing-details__image\"\n      />\n      <div className=\"listing-details\">\n        <Row align=\"middle\" className=\"listing-details__information\">\n          <Link\n            className=\"listing-details__information-location\"\n            to={`/listings/${city}`}\n          >\n            <EnvironmentOutlined size={59} /> {city}\n          </Link>\n          <Paragraph\n            ellipsis={{ rows: 1, expandable: true }}\n            className=\"listing-details__information-address\"\n          >\n            <Divider type=\"vertical\" />\n            {address}\n          </Paragraph>\n        </Row>\n        <div className=\"listing-details__title\">\n          <Title level={3}>{title}</Title>\n        </div>\n      </div>\n      <Divider />\n      <div className=\"listing-details__host\">\n        <Link to={`/user/${host.id}`}>\n          <Avatar src={host.avatar} size={64} />\n        </Link>\n        <Title level={2} className=\"\">\n          {host.name}\n        </Title>\n      </div>\n      <Divider />\n      <div className=\"listing-details__section\">\n        <Title level={4}>About this place</Title>\n        <div>\n          <Tag color=\"magenta\">{type}</Tag>\n          <Tag color=\"cyan\">{numOfGuests} Guests</Tag>\n        </div>\n        <Paragraph\n          className=\"listing-details__section-description\"\n          ellipsis={{ rows: 3, expandable: true }}\n        >\n          {description}\n        </Paragraph>\n      </div>\n    </div>\n  );\n};\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Avatar, Divider, List, Typography} from 'antd'\nimport {Listing} from \"../../../../lib/graphql/queries/Listing/__generated__/Listing\";\n\nconst {Text, Title} = Typography\n\ninterface Props {\n    listingBookings: Listing[\"listing\"][\"bookings\"];\n    bookingPage: number\n    limit: number\n    setBookingPage: (page: number) => void\n}\n\nexport const ListingBookings = ({listingBookings, bookingPage, limit, setBookingPage}: Props) => {\n\n    const total = listingBookings ? listingBookings.total : null;\n    const result = listingBookings ? listingBookings.result : null;\n\n    const listingBooking = listingBookings ? (\n        <List\n            grid={{\n                gutter: 8,\n                xs: 1,\n                sm: 2,\n                lg: 3\n            }}\n            dataSource={result ? result : undefined}\n            locale={{emptyText: \"No booking yet!\"}}\n            pagination={{\n                current: bookingPage,\n                total: total ? total : undefined,\n                defaultPageSize: limit,\n                hideOnSinglePage: true,\n                showLessItems: true,\n                onChange: (page: number) => setBookingPage(page)\n\n            }}\n            renderItem={listingsBooking => {\n                const bookingHistory = (\n                    <div className=\"\">\n                        <div>\n                            Check in: <Text strong>{listingsBooking.checkIn}</Text>\n                        </div>\n                        <div>\n                            Check out: <Text strong>{listingsBooking.checkOut}</Text>\n                        </div>\n                    </div>\n                );\n                return (\n                    <List.Item>\n                        {bookingHistory}\n                        <Link to={`/user/${listingsBooking.tenant.id}`}>\n                        <Avatar\n                            src={listingsBooking.tenant.avatar}\n                            size={64}\n                            shape={\"square\"}\n                        />\n                        </Link>\n                    </List.Item>\n                )\n            }}\n\n\n        />\n    ) : null;\n    const listingBookingEle = listingBooking ? (\n        <div className=\"\">\n            <Divider/>\n            <div className=\"\">\n                <Title level={4}>Bookings</Title>\n            </div>\n            {listingBooking}\n        </div>\n    ) : null;\n    return (\n        <h1>{listingBookingEle}</h1>\n    )\n}","import React, { FC } from \"react\";\nimport { Moment } from \"moment\";\nimport {Listing as ListingData} from '../../../../lib/graphql/queries/Listing/__generated__/Listing'\nimport { Button, Card, DatePicker, Divider, Typography } from \"antd\";\nimport { displayErrorMessage, formatPricing } from \"../../../../lib/utils\";\nimport moment from \"moment/moment\";\nimport { Viewer } from \"../../../../lib/types\";\nimport {BookingsIndex} from './types'\n\nconst { Title, Text, Paragraph } = Typography;\n\ninterface Props {\n  viewer: Viewer;\n  price: number;\n  setModalVisible: (modalVisible: boolean) => void;\n  bookingsIndex: ListingData[\"listing\"][\"bookingsIndex\"]\n  host: ListingData[\"listing\"][\"host\"];\n  checkInDate: Moment | null;\n  checkOutDate: Moment | null;\n  setCheckOutDate: (checkOutDate: Moment | null) => void;\n  setCheckInDate: (checkInDate: Moment | null) => void;\n}\n\nexport const ListingCreateBooking: FC<Props> = ({\n  price,\n  host,\n  viewer,\n  checkOutDate,\n  bookingsIndex,\n  setModalVisible,\n  checkInDate,\n  setCheckInDate,\n  setCheckOutDate,\n}) => {\n  const bookingsIndexJson:BookingsIndex = JSON.parse(bookingsIndex);\n  const viewerIsHost = viewer.id === host.id;\n  const checkInInputDisabled = !viewer.id || viewerIsHost || !host.hasWallet;\n  const checkOutInputDisable =  checkInInputDisabled || !checkInDate;\n  let buttonDisabled = checkOutInputDisable || !checkInDate || !checkOutDate;\n  let buttonMessage = \"\"\n  if(!viewer.id){\n      buttonMessage = \"You have to be signed in to book a listing!\"\n  } else if(viewerIsHost) {\n    buttonMessage = \"You can't book your own listing!\"\n  } else if (!host.hasWallet) {\n    buttonMessage = \"The host has disconnected from Stripe coz it need payment process!\"\n  }\n  const dateIsBooked = (currentDate: Moment) => {\n    const year = moment(currentDate).year()\n    const month = moment(currentDate).month()\n    const day = moment(currentDate).date()\n\n    if (bookingsIndexJson[year] && bookingsIndexJson[year][month]) {\n      return Boolean(bookingsIndexJson[year][month][day])\n    } else {\n      return false;\n    }\n  }\n  const disableBeforeCurrentDate = (currentDate?: Moment) => {\n    if (currentDate) {\n      return currentDate.isBefore(moment().endOf(\"day\")) || dateIsBooked(currentDate);\n    } else {\n      return false;\n    }\n  };\n  const verifyCheckoutBookingDate = (selectedCheckOutDate: Moment | null) => {\n    if (checkInDate && selectedCheckOutDate) {\n      if (moment(selectedCheckOutDate).isBefore(checkInDate, \"days\")) {\n        setCheckOutDate(null);\n        return displayErrorMessage(\n          \"Hey!! you can't booking date check out less than date check in! 🤨 \"\n        );\n      } else {\n        setCheckOutDate(selectedCheckOutDate);\n      }\n      let dateCursor = checkInDate\n      while (moment(dateCursor).isBefore(selectedCheckOutDate, \"days\")) {\n        dateCursor = moment(dateCursor).add(1, \"days\")\n        const year = moment(dateCursor).year()\n        const month = moment(dateCursor).month()\n        const day = moment(dateCursor).date()\n        if (bookingsIndexJson[year] && bookingsIndexJson[year][month] && bookingsIndexJson[year][month][day]) {\n          return displayErrorMessage(\"You can't book period of time that overlaps with existing bookings !\")\n        }\n      }\n    }\n  };\n  return (\n    <div className=\"listing-create\">\n      <Card style={{width: 350}} className=\"listing-create__card\">\n        <Paragraph>\n          <Title level={2}>\n            {formatPricing(price)}\n            <span>/day</span>\n          </Title>\n        </Paragraph>\n        <Divider />\n        <div>\n          <Paragraph strong>Check in</Paragraph>\n          <DatePicker\n            value={checkInDate ? checkInDate : undefined}\n            format={\"YYYY/MM/DD\"}\n            disabled={checkInInputDisabled}\n            disabledDate={disableBeforeCurrentDate}\n            onChange={(checkInValue) => setCheckInDate(checkInValue)}\n            onOpenChange={() => setCheckOutDate(null)}\n          />\n        </div>\n        <div>\n          <Paragraph strong>Check Out</Paragraph>\n          <DatePicker\n            value={checkOutDate ? checkOutDate : undefined}\n            format={\"YYYY/MM/DD\"}\n            showToday={false}\n            disabled={checkOutInputDisable}\n            disabledDate={disableBeforeCurrentDate}\n            onChange={(checkOutValue) =>\n              verifyCheckoutBookingDate(checkOutValue)\n            }\n          />\n        </div>\n        <Divider />\n        <Button disabled={buttonDisabled} size=\"large\" type=\"primary\" onClick={() => setModalVisible(true)}>\n          {\" \"}\n          👉🏻 Book{\" \"} 👈\n        </Button>\n        <Text>{buttonMessage}</Text>\n      </Card>\n    </div>\n  );\n};\n","import {gql} from 'apollo-boost'\n\n\nexport const LOG_IN = gql`\n    mutation LogIn($input: LogInInput) {\n        logIn(input: $input){\n            id\n            token\n            avatar\n            hasWallet\n            didRequest\n        }\n    }`","import {gql} from 'apollo-boost'\n\n\nexport const LOG_OUT = gql`\n    mutation LogOut {\n        logOut{\n            id\n            didRequest\n            avatar\n            hasWallet\n            token\n        }\n    }\n`","import { gql } from \"apollo-boost\";\n\nexport const HOST_LISTING = gql`\n  mutation HostListing($input: HostListingInput!) {\n    hostListing(input: $input) {\n      id\n    }\n  }\n`;\n","import { gql } from \"apollo-boost\";\nexport const CONNECT_STRIPE = gql`\n  mutation ConnectStripe($input: ConnectStripeInput!) {\n    connectStripe(input: $input) {\n      hasWallet\n    }\n  }\n`;\n","import { gql } from \"apollo-boost\";\n\nexport const DISCONNECT_STRIPE = gql`\n  mutation DisconnectStripe {\n    disconnectStripe {\n      hasWallet\n    }\n  }\n`;\n","import { gql } from \"apollo-boost\";\nexport const CREATE_BOOKING = gql`\n  mutation CreateBooking($input: CreateBookingInput!) {\n    createBooking(input: $input) {\n      id\n    }\n  }\n`;\n","import React from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport {\n  CardElement,\n  injectStripe,\n  ReactStripeElements,\n} from \"react-stripe-elements\";\nimport { Button, Modal, Typography, Divider, Row, Col } from \"antd\";\nimport { KeyOutlined } from \"@ant-design/icons\";\nimport moment, { Moment } from \"moment\";\nimport { CREATE_BOOKING } from \"../../../../lib/graphql/mutations\";\nimport {\n  CreateBooking as CreateBookingData,\n  CreateBookingVariables,\n} from \"../../../../lib/graphql/mutations/CreateBooking/__generated__/CreateBooking\";\n\nimport {\n  formatPricing,\n  displayErrorMessage,\n  displaySuccessNotification,\n} from \"../../../../lib/utils\";\ninterface Props {\n  price: number;\n  checkInDate: Moment;\n  checkOutDate: Moment;\n  id: string;\n  modalVisible: boolean;\n  clearBookingDate: () => void;\n  handleListingRefetch: () => Promise<void>;\n  setModalVisible: (modalVisible: boolean) => void;\n}\nconst { Paragraph, Text, Title } = Typography;\nexport const ListingCreateBookingModal = ({\n  modalVisible,\n  price,\n  checkInDate,\n  checkOutDate,\n  setModalVisible,\n  handleListingRefetch,\n  stripe,\n  clearBookingDate,\n  id,\n}: Props & ReactStripeElements.InjectedStripeProps) => {\n  const [createBooking, { loading }] = useMutation<\n    CreateBookingData,\n    CreateBookingVariables\n  >(CREATE_BOOKING, {\n    onCompleted: () => {\n      clearBookingDate();\n      displaySuccessNotification(\n        \"You're successfully booked the listings! \",\n        \"Booking history can always be found in your User page.\"\n      );\n      handleListingRefetch();\n    },\n    onError: () => {\n      displayErrorMessage(\n        \"Sorry! We weren't able to successfully book the listing.Please try again later.\"\n      );\n    },\n  });\n\n  const daysBookedDiff = checkOutDate.diff(checkInDate, \"days\") + 1;\n  const listingPrice = price * daysBookedDiff;\n  const handleCreateBooking = async () => {\n    if (!stripe) {\n      return displayErrorMessage(\n        \"Sorry something went wrong with stripe connect process.. 😢\"\n      );\n    }\n    let { token: stripeToken, error } = await stripe.createToken();\n    if (stripeToken) {\n      createBooking({\n        variables: {\n          input: {\n            id,\n            source: stripeToken.id,\n            checkIn: moment(checkInDate).format(\"YYYY-MM-DD\"),\n            checkOut: moment(checkOutDate).format(\"YYYY-MM-DD\"),\n          },\n        },\n      });\n    } else {\n      displayErrorMessage(\n        error && error.message\n          ? error.message\n          : \"Sorry! We weren't able to book the listing, Please try again later\"\n      );\n    }\n  };\n  return (\n    <Modal\n      visible={modalVisible}\n      centered\n      footer={null}\n      onCancel={() => setModalVisible(false)}\n    >\n      <div className=\"listing-create-booking-modal\">\n        <Row justify=\"center\" align=\"middle\" style={{ width: \"100%\" }}>\n          <Title level={3}>processing book your trip ...</Title>\n          <Paragraph style={{ textAlign: \"center\", width: \"70%\" }}>\n            you're booked this listing from dates between\n            <Text mark strong>\n              {moment(checkInDate).format(\"MMMM Do YYYY\")} -{\" \"}\n            </Text>\n            <Text mark strong>\n              {moment(checkInDate).format(\"MMMM Do YYYY\")}\n            </Text>\n          </Paragraph>\n        </Row>\n        <Divider />\n        <Row justify=\"center\" align=\"middle\" style={{ width: \"100%\" }}>\n          <Paragraph>\n            {formatPricing(price)} * {daysBookedDiff} days =\n            <Text strong>{formatPricing(listingPrice)}</Text>\n          </Paragraph>\n        </Row>\n        <Row justify=\"center\" align=\"middle\" style={{ width: \"100%\" }}></Row>\n        <Row justify=\"center\" align=\"middle\" style={{ width: \"100%\" }}>\n          <Paragraph>\n            Total = <Text mark>{formatPricing(listingPrice)}</Text>\n          </Paragraph>\n        </Row>\n        <Divider />\n        <CardElement hidePostalCode />\n        <Divider />{\" \"}\n        <Row justify=\"center\" align=\"middle\" style={{ width: \"100%\" }}>\n          <Col>\n            <Button\n              size=\"large\"\n              type=\"primary\"\n              loading={loading}\n              className=\"listing-button\"\n              onClick={handleCreateBooking}\n            >\n              Enjoy your trip 🤩!\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n};\n\nexport const WrappedListingCreateBookingModal = injectStripe(\n  ListingCreateBookingModal\n);\n","import React, { useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Moment } from \"moment\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Col, Layout, Row } from \"antd\";\nimport { LISTING } from \"../../lib/graphql/queries\";\nimport { PageSkeleton } from \"../../lib/components\";\nimport {\n  Listing as ListingData,\n  ListingVariables,\n} from \"../../lib/graphql/queries/Listing/__generated__/Listing\";\nimport ErrorBoundary from \"antd/es/alert/ErrorBoundary\";\nimport {\n  ListingBookings,\n  ListingCreateBooking,\n  WrappedListingCreateBookingModal as ListingCreateBookingModal,\n  ListingDetails,\n} from \"./components\";\nimport \"./index.scss\";\nimport { Viewer } from \"../../lib/types\";\n\ninterface MatchParams {\n  id: string;\n}\ninterface Props {\n  viewer: Viewer;\n}\nconst { Content } = Layout;\nconst LIMIT_PAGE = 3;\nexport const Listing = ({\n  viewer,\n  match,\n}: Props & RouteComponentProps<MatchParams>) => {\n  const [bookingsPage, setBookingsPage] = useState(1);\n  const [checkInDate, setCheckInDate] = useState<Moment | null>(null);\n  const [checkOutDate, setCheckOutDate] = useState<Moment | null>(null);\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\n  const { loading, data, error, refetch } = useQuery<\n    ListingData,\n    ListingVariables\n  >(LISTING, {\n    variables: {\n      id: match.params.id,\n      bookingsPage,\n      limit: LIMIT_PAGE,\n    },\n  });\n\n  const clearBookingDate = () => {\n    setModalVisible(false);\n    setCheckInDate(null);\n    setCheckOutDate(null);\n  };\n  const handleListingRefetch = async () => {\n    await refetch();\n  };\n  if (loading) {\n    return (\n      <Content>\n        <PageSkeleton />\n      </Content>\n    );\n  }\n  if (error) {\n    return (\n      <Content>\n        <ErrorBoundary description=\"This listing may not exist or we're encountered an error. Please try again soon.\" />\n        <PageSkeleton />\n      </Content>\n    );\n  }\n  const listing = data ? data.listing : null;\n  const listingBookings = listing ? listing.bookings : null;\n  const listingDataElement = listing ? (\n    <ListingDetails listing={listing} />\n  ) : null;\n  const listingBookingsElement = listingBookings ? (\n    <ListingBookings\n      listingBookings={listingBookings}\n      bookingPage={bookingsPage}\n      limit={LIMIT_PAGE}\n      setBookingPage={setBookingsPage}\n    />\n  ) : null;\n\n  const listingCreateBookingEle = listing ? (\n    <ListingCreateBooking\n      viewer={viewer}\n      host={listing.host}\n      price={listing.price}\n      bookingsIndex={listing.bookingsIndex}\n      checkInDate={checkInDate}\n      checkOutDate={checkOutDate}\n      setCheckInDate={setCheckInDate}\n      setCheckOutDate={setCheckOutDate}\n      setModalVisible={setModalVisible}\n    />\n  ) : null;\n\n  const listingCreateBookingModalEle =\n    listing && checkInDate && checkOutDate ? (\n      <ListingCreateBookingModal\n        price={listing.price}\n        id={listing.id}\n        checkInDate={checkInDate}\n        checkOutDate={checkOutDate}\n        modalVisible={modalVisible}\n        clearBookingDate={clearBookingDate}\n        setModalVisible={setModalVisible}\n        handleListingRefetch={handleListingRefetch}\n      />\n    ) : null;\n  return (\n    <Content className=\"listing\">\n      <Row gutter={24} justify=\"space-between\">\n        <Col xs={24} lg={14}>\n          {listingDataElement}\n          {listingBookingsElement}\n        </Col>\n        <Col xs={24} lg={10}>\n          {listingCreateBookingEle}\n        </Col>\n        {listingCreateBookingModalEle}\n      </Row>\n    </Content>\n  );\n};\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Card, Col, Input, Row, Typography} from 'antd'\nimport Phuket from '../../assets/phuket.jpg'\nimport Bkk from '../../assets/bkk.jpg'\nimport ChaingMai from '../../assets/chaingmai.jpg'\nimport Ubon from '../../assets/ubon.jpeg'\nimport '../index.scss'\n\n\nconst {Title} = Typography\nconst {Search} = Input\n\ninterface Props {\n    onSearch: (value: string) => void;\n}\n\nexport const HomeTop = ({onSearch}: Props) => {\n    return (\n        <div>\n            <div>\n                <Title style={{marginTop: '10px'}}>Find a place that you want to stay</Title>\n                <Row>\n                    <Col xs={24} md={12}>\n                        <Search placeholder={\"Try Search 'SN. APERTMENT\"} size=\"large\"\n                                className=\"home__search\"\n                                onSearch={onSearch}\n                                enterButton/>\n                    </Col>\n                </Row>\n\n            </div>\n            <Row gutter={12} align=\"middle\" className=\"home__container\">\n                <Col xs={24} md={12} sm={12} lg={6}>\n                    <Link to=\"/listings/phuket\">\n\n                        <Card  bordered={false} cover={<img src={Phuket}  className=\"cover__image contrast-60\" alt=\"Phuket\"/>}>\n                            <h1 className=\"cover__text\"> Phuket</h1>\n                        </Card>\n                    </Link>\n                </Col>\n                <Col xs={24} md={12} sm={12} lg={6} >\n                    <Link to=\"/listings/bangkok\">\n                        <Card cover={<img src={Bkk} className=\"cover__image contrast-60\" alt=\"Bangkok\"/>}>\n                            <h1 className=\"cover__text\">Bangkok</h1></Card>\n                    </Link>\n\n                </Col>\n                <Col xs={24} md={12} sm={12} lg={6}>\n                    <Link to=\"/listings/chaingmai\">\n                        <Card cover={<img src={ChaingMai} className=\"cover__image contrast-60\" alt=\"Chiangmai\"/>}>\n                            <h1 className=\"cover__text\">Chaingmai </h1></Card>\n                    </Link>\n                </Col>\n                <Col xs={24} md={12} sm={12} lg={6}>\n                    <Link to=\"/listings/ubon ratchathani\">\n                        <Card cover={<img src={Ubon} className=\"cover__image contrast-60\" alt=\"Ubon Rat\"/>}>\n                            <h1 className=\"cover__text\">Ubon Ratchathani </h1></Card>\n                    </Link>\n                </Col>\n            </Row>\n        </div>\n    )\n}","import React from 'react'\nimport {List, Row, Typography} from 'antd'\nimport {Listings} from '../../../../lib/graphql/queries/Listings/__generated__/Listings'\nimport {ListingCard} from '../../../../lib/components'\nimport { Link } from 'react-router-dom'\n\ninterface Props {\n    title: string;\n    listings: Listings[\"listings\"][\"result\"]\n}\n\nconst {Title} = Typography\nexport const HomePremiumListings = ({title, listings}: Props) => {\n    return (\n        <div>\n            <Title level={4} className=\"home__premium-listings\">\n                {title}\n            </Title>\n            <Row justify=\"space-between\">\n            <List\n                grid={{gutter: 10, xs: 1, sm: 2,md:2, lg: 2,xl:4,xxl:4}}\n\n                dataSource={listings}\n                renderItem={listing => {\n                    return (<List.Item>\n                        <Link to={`/listing/${listing.id}`}>\n                        <ListingCard listing={listing}/>\n                        </Link>\n                    </List.Item>)\n                }}\n            >\n\n            </List>\n            </Row>\n        </div>\n    )\n}","import React from 'react'\nimport {Card, List, Skeleton} from 'antd'\n\nexport const HomeListSkeleton = () => {\n    const emptyData = [{}, {}, {}, {}]\n    return (\n        <div className=\"home__skeleton\">\n            <Skeleton paragraph={{rows: 0}}/>\n            <List\n                grid={{gutter: 0, xs: 1, sm: 2, lg: 4}}\n                dataSource={emptyData}\n                renderItem={() => (\n                    <List.Item>\n                        <Card style={{width: 280}}\n                              cover={<div className=\"home__skeleton-image\"/>}\n                              loading/>\n                    </List.Item>\n                )}\n            />\n        </div>\n    )\n}","import React from 'react'\nimport {useQuery} from '@apollo/react-hooks'\nimport {Link, RouteComponentProps} from 'react-router-dom'\nimport {Col, Layout, Row, Typography} from 'antd'\nimport {HomeListSkeleton, HomePremiumListings, HomeTop} from './components'\nimport {LISTINGS} from '../../lib/graphql/queries/Listings'\nimport {Listings as ListingsData, ListingsVariables} from '../../lib/graphql/queries/Listings/__generated__/Listings'\nimport Krabi from './assets/krabi.jpeg'\nimport Songkhla from './assets/songkhla.jpeg'\nimport './index.scss';\nimport {ListingsFilter} from \"../../lib/graphql/globalTypes\";\n\nconst {Content} = Layout\nconst {Text, Title, Paragraph} = Typography\n\nconst PAGE_LIMIT = 4\nconst PAGE_NUMBER = 1\nexport const Home = ({history}: RouteComponentProps) => {\n    const {loading, data} = useQuery<ListingsData, ListingsVariables>(LISTINGS, {\n        variables: {\n            filter: ListingsFilter.PRICE_HIGH_TO_LOW,\n            limit: PAGE_LIMIT,\n            page: PAGE_NUMBER\n        }\n    })\n    const onSearch = (value: string) => {\n        const trimValue = value.trim();\n        history.push(`/listings/${trimValue}`)\n    }\n\n    const renderTopListings = () => {\n        if (loading) {\n            return <HomeListSkeleton/>;\n\n        }\n        if (data) {\n            return (\n                <div>\n                    <HomePremiumListings title={`Premium Listings`} listings={data.listings.result}/>\n                </div>)\n        }\n        return null;\n    }\n    return (\n        <Content className=\"home\">\n            <HomeTop onSearch={onSearch}/>\n            <div className=\"home__location\">\n                <Title level={2} className=\"home__middle-cta\">\n                    Your guide for all things rental\n                </Title>\n                <Paragraph>\n                    Get the hotel around your last location.\n                </Paragraph>\n                <Link to=\"/listings/thailand\" className=\"home__location-btn\">\n                    Popular listing in Thailand\n                </Link>\n            </div>\n            {renderTopListings()}\n            <div className=\"home__another\">\n                <Title level={4} className=\"home__another-title\">\n                    Listing of any kind\n                </Title>\n                <Row gutter={6}>\n                    <Col xs={24} sm={12} md={12} xl={12}>\n                        <Link to=\"/listings/songkhla\">\n                            <div>\n                                <img src={Songkhla} alt=\"Songkhla\" className=\"home__another-image contrast-60\"></img>\n                                <div style={{width: '50'}} className=\"home__another-image-title\">“ Get Away From Covid\n                                    and Stay with the Silent Place in Songkhla ”</div>\n                            </div>\n                        </Link>\n                    </Col>\n                    <Col xs={24} sm={12}>\n                        <Link to=\"/listings/krabi\">\n                            <div>\n                                <img src={Krabi} alt=\"Krabi\" className=\"home__another-image contrast-60\"/>\n                                <Title className=\"home__another-image-title\">“Tired of the city life ? get away from it\n                                    all with Emerald Pool in Krabi country ”</Title>\n                            </div>\n                        </Link>\n\n                    </Col>\n                </Row>\n            </div>\n        </Content>\n    )\n}\n","import React, { useState, FormEvent } from \"react\";\nimport {\n  Layout,\n  Typography,\n  Form,\n  Input,\n  InputNumber,\n  Row,\n  Radio,\n  Upload,\n  Button,\n} from \"antd\";\nimport { UploadChangeParam } from \"antd/lib/upload\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ListingType } from \"../../lib/graphql/globalTypes\";\nimport { Viewer } from \"../../lib/types\";\nimport { HOST_LISTING } from \"../../lib/graphql/mutations\";\nimport {\n  HostListing as HostListingData,\n  HostListingVariables,\n} from \"../../lib/graphql/mutations/HostListing/__generated__/HostListing\";\nimport {\n  displayErrorMessage,\n  displaySuccessNotification,\n} from \"../../lib/utils\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport {\n  HomeTwoTone,\n  BankTwoTone,\n  PlusOutlined,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\nimport \"./index.scss\";\n\ninterface Props {\n  viewer: Viewer;\n}\nconst { Content } = Layout;\nconst { Text, Title } = Typography;\nconst { Item } = Form;\nexport const Host = ({ viewer }: Props) => {\n  const [form] = Form.useForm();\n  const [imageLoading, setImageLoading] = useState(false);\n  const [imageBase64Value, setImageBase64Value] = useState<string | null>(null);\n\n  const [hostListing, { loading, data }] = useMutation<\n    HostListingData,\n    HostListingVariables\n  >(HOST_LISTING, {\n    onCompleted: () => {\n      displaySuccessNotification(\n        \"Hulaaa ! You're successfully created your listing!\"\n      );\n    },\n    onError: () => {\n      displayErrorMessage(\n        \"Sorry We weren't able to create your listing. Please try again later\"\n      );\n    },\n  });\n  const dummyRequest = ({ file, onSuccess }) => {\n    setTimeout(() => {\n      onSuccess(\"ok\");\n    }, 0);\n  };\n  const onFinish = (values) => {\n    const fullAddress = `${values.address}, ${values.city}, ${values.state}, ${values.postalCode}`;\n\n    const input = {\n      ...values,\n      address: fullAddress,\n      image: imageBase64Value,\n      price: values.price * 100,\n    };\n    delete input.city;\n    delete input.state;\n    delete input.postalCode;\n    hostListing({\n      variables: { input },\n    });\n  };\n  const handleImageUpload = (info: UploadChangeParam) => {\n    const { file } = info;\n\n    if (file.status === \"uploading\") {\n      setImageLoading(true);\n      return;\n    }\n\n    if (file.status === \"done\" && file.originFileObj) {\n      getBase64Value(file.originFileObj, (imageBase64Value) => {\n        setImageBase64Value(imageBase64Value);\n        setImageLoading(false);\n      });\n    }\n  };\n  if (!viewer.id || !viewer.hasWallet) {\n    return (\n      <Content className=\"host__container\">\n        <div className=\"host__form-header\">\n          <Title level={3} className=\"host__form-title\">\n            You'll have to be signed in add connected with Stripe to host a\n            listing!\n          </Title>\n          <Text type=\"secondary\">\n            Only user who've signed in to our application and have connected\n            with Stripe. You can sign in at the <Link to=\"/login/\">login</Link>{\" \"}\n            page\n          </Text>\n        </div>\n      </Content>\n    );\n  }\n  if (loading) {\n    return (\n      <Content className=\"host__container\">\n        <div className=\"host__form-header\">\n          <Title level={3} className=\"host__form-title\">\n            Please wait.....\n          </Title>\n          <Text type=\"secondary\">We're creating your listing now.</Text>\n        </div>\n      </Content>\n    );\n  }\n  if (data && data.hostListing) {\n    return <Redirect to={`/listing/${data.hostListing.id}`} />;\n  }\n\n  return (\n    <Content className=\"host__container\">\n      <Row justify=\"center\">\n        <Form layout=\"vertical\" form={form} onFinish={onFinish}>\n          <div className=\"host__form-header\">\n            <Title level={3} className=\"host__form-title\">\n              Hi! Let's get started listing your place.\n            </Title>\n            <Text type=\"secondary\">\n              In this form, we'll collect some basic and additional information\n              about your listing.\n            </Text>\n          </div>\n\n          <Item\n            name=\"type\"\n            rules={[{ required: true, message: \"Please select a home type!\" }]}\n            label=\"Home Type\"\n          >\n            <Radio.Group>\n              <Radio.Button value={ListingType.HOUSE}>\n                <HomeTwoTone /> <span>House</span>\n              </Radio.Button>\n              <Radio.Button value={ListingType.APARTMENT}>\n                <BankTwoTone /> <span>Apartment</span>\n              </Radio.Button>\n            </Radio.Group>\n          </Item>\n          <Item\n            name=\"numOfGuests\"\n            rules={[\n              { required: true, message: \"Please enter number of guests\" },\n            ]}\n            label=\"Max of Guests\"\n          >\n            <InputNumber min={1} placeholder=\"1,2,3...\" />\n          </Item>\n          <Item\n            name=\"title\"\n            rules={[{ required: true, message: \"Please enter title!\" }]}\n            label=\"Title\"\n            extra=\"character must < 45\"\n          >\n            <Input maxLength={45} placeholder=\"SN Apartment\" />\n          </Item>\n          <Item\n            name=\"description\"\n            rules={[{ required: true, message: \"Please enter description!\" }]}\n            label=\"Description of listing\"\n            extra=\"character must < 400\"\n          >\n            <Input.TextArea\n              rows={3}\n              maxLength={400}\n              placeholder=\"Fantastic duplex apartment with three bedrooms,  \"\n            />\n          </Item>\n          <Item\n            name=\"address\"\n            rules={[{ required: true, message: \"Please enter your address!\" }]}\n            label=\"Address\"\n          >\n            <Input maxLength={45} placeholder=\"30/175-175 wichitsongkram\" />\n          </Item>\n          <Item\n            name=\"city\"\n            label=\"City/Town/Sublocality\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter a city for your listings!\",\n              },\n            ]}\n          >\n            <Input maxLength={45} placeholder=\"Kathu\" />\n          </Item>\n          <Item\n            name=\"state\"\n            label=\"State/Province\"\n            rules={[\n              {\n                required: true,\n                message: \"Please endter  a state for your listing!\",\n              },\n            ]}\n          >\n            <Input maxLength={45} placeholder=\"Phuket Thailand\" />\n          </Item>\n\n          <Item\n            name=\"postalCode\"\n            label=\"Zip/Postal Code\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter a zip code for your listing!\",\n              },\n            ]}\n          >\n            <Input maxLength={45} placeholder=\"Please enter Postal Code\" />\n          </Item>\n\n          <Item\n            name=\"image\"\n            label=\"Image Place\"\n            extra=\"Images must under 1MB and type must be JPG or PNG\"\n            rules={[\n              { required: true, message: \"Please upload your listing image!\" },\n            ]}\n          >\n            <Upload\n              name=\"image\"\n              listType=\"picture-card\"\n              customRequest={dummyRequest}\n              showUploadList={false}\n              beforeUpload={beforeImageUpload}\n              action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n              onChange={handleImageUpload}\n            >\n              {imageBase64Value ? (\n                <img\n                  src={imageBase64Value}\n                  style={{ width: \"300px\" }}\n                  alt=\"listings\"\n                />\n              ) : (\n                <div>\n                  {imageLoading ? <LoadingOutlined /> : <PlusOutlined />}\n                  <div>Upload</div>\n                </div>\n              )}\n            </Upload>\n          </Item>\n          <Item\n            name=\"price\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter a price for your listing!\",\n              },\n            ]}\n            label=\"Price\"\n            extra=\"All prices in BATH/day\"\n          >\n            <InputNumber min={0} placeholder=\"300\" />\n          </Item>\n          <Item>\n            <Button htmlType=\"submit\">Submit</Button>\n          </Item>\n        </Form>\n      </Row>\n    </Content>\n  );\n};\nconst beforeImageUpload = (file: File) => {\n  const fileIsValidImage =\n    file.type === \"image/jpeg\" || file.type === \"image/png\";\n  const fileIsValidSize = file.size / 1024 / 1024 < 1;\n\n  if (!fileIsValidImage) {\n    displayErrorMessage(\"You're only able to upload valid JPG or PNG files!\");\n    return false;\n  }\n\n  if (!fileIsValidSize) {\n    displayErrorMessage(\n      \"You're only able to upload valid image files of under 1MB in size!\"\n    );\n    return false;\n  }\n\n  return fileIsValidImage && fileIsValidSize;\n};\n\nconst getBase64Value = (\n  img: File | Blob,\n  callback: (imageBase64Value: string) => void\n) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(img);\n  reader.onload = () => {\n    callback(reader.result as string);\n  };\n};\n","import React from 'react'\n\nexport const NotFound = () => {\n    return (\n        <h1>NotFound</h1>\n    )\n}","import React, { FC } from \"react\";\nimport { useMutation } from \"react-apollo\";\nimport {\n  Avatar,\n  Card,\n  Row,\n  Col,\n  Divider,\n  Typography,\n  Affix,\n  Tag,\n  Button,\n} from \"antd\";\nimport { User as UserData } from \"../../../../lib/graphql/queries/User/__generated__/User\";\nimport {\n  formatIncome,\n  displaySuccessNotification,\n  displayErrorMessage,\n} from \"../../../../lib/utils\";\nimport { DISCONNECT_STRIPE } from \"../../../../lib/graphql/mutations\";\nimport { DisconnectStripe as DisconnectStripeData } from \"../../../../lib/graphql/mutations/DisconnectStripe/__generated__/DisconnectStripe\";\nimport \"./index.scss\";\nimport { Viewer } from \"../../../../lib/types\";\n\ninterface Props {\n  user: UserData[\"user\"];\n  viewerIsUser: boolean;\n  viewer: Viewer;\n  setViewer: (viewer: Viewer) => void;\n  handleUserRefetch: () => Promise<void>;\n}\nconst stripeAuthUrl = `https://connect.stripe.com/oauth/authorize?response_type=code&client_id=${process.env.REACT_APP_SP_CLIENT_ID}&scope=read_write`;\nconst { Paragraph, Text, Title } = Typography;\nexport const UserProfile: FC<Props> = ({\n  user,\n  viewerIsUser,\n  viewer,\n  setViewer,\n  handleUserRefetch,\n}) => {\n  const [disconnectStripe, { loading }] = useMutation<DisconnectStripeData>(\n    DISCONNECT_STRIPE,\n    {\n      onCompleted: (data) => {\n        if (data && data.disconnectStripe) {\n          setViewer({ ...viewer, hasWallet: data.disconnectStripe.hasWallet });\n          displaySuccessNotification(\n            \"You've successfully disconnected from Stripe!\",\n            \"You'll have to reconnect with Stripe to continue to create listings\"\n          );\n          handleUserRefetch();\n        }\n      },\n      onError: () => {\n        displayErrorMessage(\n          \"Sorry! We weren't able to disconnect. Please try again later\"\n        );\n      },\n    }\n  );\n  const redirectToStripePage = () => {\n    window.location.href = stripeAuthUrl;\n  };\n\n  const additionalDetails = user.hasWallet ? (\n    <>\n      <Paragraph>\n        <div className=\"user__tag-container\">\n          <Tag className=\"center\" color=\"green\">\n            Stripe Registered\n          </Tag>\n        </div>\n      </Paragraph>\n      <Paragraph>\n        Income Earned: {\"\"}\n        <Text strong>{user.income ? formatIncome(user.income) : `0`}</Text>\n      </Paragraph>\n\n      <Button\n        type=\"primary\"\n        className=\"user__profile-details-disconnect\"\n        loading={loading}\n        onClick={() => disconnectStripe()}\n      >\n        Disconnect Stripe\n      </Button>\n      <Paragraph type=\"secondary\">\n        By disconnecting, you won't be able to receive{\" \"}\n        <Text strong>any further payments</Text>\n      </Paragraph>\n    </>\n  ) : (\n    <>\n      <Paragraph>\n        Interesting become Xotel host ? Register with your Stripe account.\n      </Paragraph>\n      <Button\n        className=\"stripe-btn\"\n        block\n        type=\"primary\"\n        onClick={redirectToStripePage}\n      >\n        Connect with Stripe\n      </Button>\n      <Paragraph>\n        Xotel uses{\" \"}\n        <a\n          href=\"https://stripe.com/en-US/connect\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Stripe\n        </a>{\" \"}\n        to help transfer your earning in a secure and truster maner.\n      </Paragraph>\n    </>\n  );\n  const additionalDetailSection = viewerIsUser ? (\n    <>\n      <Divider />\n      <div>\n        <Title level={4}>Additional Details</Title>\n      </div>\n      <div>{additionalDetails}</div>\n    </>\n  ) : null;\n  return (\n    <div className=\"user__container\">\n      <Card className=\"user__card\">\n        <div className=\"user__content\">\n          <div className=\"avatar\">\n            <Avatar size={100} src={user.avatar} />\n          </div>\n          <Divider />\n          <Title level={4}>Details</Title>\n          <Paragraph>\n            Name: <Text strong>{user.name}</Text>\n          </Paragraph>\n          <Paragraph>\n            Contact: <Text strong>{user.contact}</Text>\n          </Paragraph>\n          {additionalDetailSection}\n        </div>\n      </Card>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { List, Typography, Row } from \"antd\";\nimport { ListingCard } from \"../../../../lib/components\";\nimport { User } from \"../../../../lib/graphql/queries/User/__generated__/User\";\nimport \"./index.scss\";\ninterface Props {\n  userListings: User[\"user\"][\"listings\"];\n  listingsPage: number;\n  limit: number;\n  setListingsPage: (page: number) => void;\n}\n\nconst { Paragraph, Title } = Typography;\n\nexport const UserListings: FC<Props> = ({\n  userListings,\n  listingsPage,\n  limit,\n  setListingsPage,\n}) => {\n  const { result, total } = userListings;\n  const userListingsList = (\n    <List\n      grid={{ gutter: 10, xs: 1, sm: 2, md: 2, lg: 3, xl: 4, xxl: 4 }}\n      dataSource={result}\n      locale={{ emptyText: \"User doens't have any listings yet!\" }}\n      pagination={{\n        position: \"top\",\n        current: listingsPage,\n        total,\n        defaultPageSize: limit,\n        hideOnSinglePage: true,\n        className: \"pagination\",\n        showLessItems: true,\n        onChange: (page: number) => setListingsPage(page),\n      }}\n      renderItem={(userListings) => (\n        <List.Item>\n          <Link to={`/listing/${userListings.id}`}>\n            <ListingCard listing={userListings} />\n          </Link>\n        </List.Item>\n      )}\n    />\n  );\n  return (\n    <div style={{ width: \"100%\" }}>\n      <Title level={4}>Listings</Title>\n      <Paragraph style={{ marginBottom: 0 }}>\n        This section highlights the listings this user currently hosts and has\n        made available for bookings,\n      </Paragraph>\n\n      {userListingsList}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { User } from \"../../../../lib/graphql/queries/User/__generated__/User\";\nimport { List, Typography } from \"antd\";\nimport { ListingCard } from \"../../../../lib/components\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  userBookings: User[\"user\"][\"bookings\"];\n  bookingsPage: number;\n  limit: number;\n  setBookingsPage: (page: number) => void;\n}\nconst { Paragraph, Title, Text } = Typography;\nexport const UserBookings: FC<Props> = ({\n  userBookings,\n  bookingsPage,\n  limit,\n  setBookingsPage,\n}) => {\n  const total = userBookings ? userBookings.total : null;\n  const result = userBookings ? userBookings.result : null;\n\n  const userBookingsList = userBookings ? (\n    <List\n      grid={{ gutter: 10, xs: 1, sm: 2, md: 2, lg: 3, xl: 4, xxl: 4 }}\n      dataSource={result ? result : undefined}\n      locale={{ emptyText: \"User doens't have any listings yet!\" }}\n      pagination={{\n        position: \"top\",\n        current: bookingsPage,\n        total: total ? total : undefined,\n        defaultPageSize: limit,\n        hideOnSinglePage: true,\n        showLessItems: true,\n        onChange: (page: number) => setBookingsPage(page),\n      }}\n      renderItem={(userBooking) => {\n        const bookignHistory = (\n          <div>\n            <div>\n              Check in: <Text strong>{userBooking.checkIn}</Text>\n            </div>\n            <div>\n              Check out: <Text strong>{userBooking.checkOut}</Text>\n            </div>\n          </div>\n        );\n        return (\n          <List.Item>\n            {bookignHistory}\n            <Link to={`/listing/${userBooking.listing.id}`}>\n              <ListingCard listing={userBooking.listing} />\n              </Link>\n          </List.Item>\n        );\n      }}\n    />\n  ) : null;\n\n  const userBookingsElelment = userBookingsList ? (\n    <div style={{ width: \"100%\" }}>\n      <Title level={4}> Bookings </Title>\n      <Paragraph>\n        This section highlights the bookings you've made , and the\n        check-in/check-out dates associated with said bookings\n      </Paragraph>\n      {userBookingsList}\n    </div>\n  ) : null;\n  return userBookingsElelment;\n};\n","import React, { FC, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Layout, Row, Col } from \"antd\";\nimport { USER } from \"../../lib/graphql/queries\";\nimport {\n  User as UserData,\n  UserVariables,\n} from \"../../lib/graphql/queries/User/__generated__/User\";\nimport { UserProfile, UserBookings, UserListings } from \"./components\";\nimport { Viewer } from \"../../lib/types\";\nimport { PageSkeleton, ErrorBanner } from \"../../lib/components\";\ninterface Props {\n  viewer: Viewer;\n  setViewer: (viewer: Viewer) => void;\n}\n\ninterface MatchParams {\n  id: string;\n}\nconst { Content } = Layout;\nconst PAGE_LIMIT = 4;\nexport const User = ({\n  viewer,\n  match,\n  setViewer,\n}: Props & RouteComponentProps<MatchParams>) => {\n  const [listingsPage, setListingsPage] = useState(1);\n  const [bookingsPage, setBookingsPage] = useState(1);\n  const { data, loading, error, refetch } = useQuery<UserData, UserVariables>(\n    USER,\n    {\n      variables: {\n        id: match.params.id,\n        bookingsPage,\n        listingsPage,\n        limit: PAGE_LIMIT,\n      },\n    }\n  );\n\n  const handleUserRefetch = async () => {\n    await refetch();\n  };\n  const stripeError = new URL(window.location.href).searchParams.get(\n    \"stripe_error\"\n  );\n  const stripeErrorBanner = stripeError ? (\n    <ErrorBanner description=\"We got issue when connecting with stripe, Please try again soon\" />\n  ) : null;\n  if (loading) {\n    return (\n      <Content className=\"page-skeleton\">\n        <PageSkeleton />\n      </Content>\n    );\n  }\n  if (error) {\n    return (\n      <Content className=\"page-skeleton\">\n        <ErrorBanner description=\"This user may not exist\" />\n        <PageSkeleton />\n      </Content>\n    );\n  }\n\n  const user = data ? data.user : null;\n  const viewerIsUser = viewer?.id === match.params.id;\n  const userListings = user ? user.listings : null;\n  const userBookings = user ? user.bookings : null;\n  const userProfileElement = user ? (\n    <UserProfile\n      user={user}\n      setViewer={setViewer}\n      handleUserRefetch={handleUserRefetch}\n      viewer={viewer}\n      viewerIsUser={viewerIsUser}\n    />\n  ) : null;\n\n  const userListingsElement = userListings ? (\n    <UserListings\n      userListings={userListings}\n      listingsPage={listingsPage}\n      limit={PAGE_LIMIT}\n      setListingsPage={setListingsPage}\n    />\n  ) : null;\n  const userBookingsElement = userListings ? (\n    <UserBookings\n      userBookings={userBookings}\n      bookingsPage={listingsPage}\n      limit={PAGE_LIMIT}\n      setBookingsPage={setBookingsPage}\n    />\n  ) : null;\n\n  return (\n    <Content className=\"user-container\">\n      {stripeErrorBanner}\n      <Row gutter={12} justify=\"space-between\">\n        <Col xs={24}>{userProfileElement}</Col>\n      </Row>\n      <div style={{ marginTop: \"30px\" }}>\n        <Row>{userListingsElement}</Row>\n      </div>\n      <div style={{ marginTop: \"30px\" }}>\n        <Row>{userBookingsElement}</Row>\n      </div>\n    </Content>\n  );\n};\n","import React, { FC, useEffect, useRef } from \"react\";\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport { LOG_IN } from \"../../lib/graphql/mutations/LogIn\";\nimport {\n  LogIn as LogInData,\n  LogInVariables,\n} from \"../../lib/graphql/mutations/LogIn/__generated__/LogIn\";\n\nimport { AUTH_URL } from \"../../lib/graphql/queries/AuthUrl\";\nimport { AuthUrl as AuthUrlData } from \"../../lib/graphql/queries/AuthUrl/__generated__/AuthUrl\";\nimport { Card, Col, Layout, Spin, Row, Typography } from \"antd\";\nimport \"./index.scss\";\nimport { GooglePlusCircleFilled } from \"@ant-design/icons\";\nimport { Viewer } from \"../../lib/types\";\nimport {\n  displaySuccessNotification,\n  displayErrorMessage,\n} from \"../../lib/utils\";\nimport { ErrorBanner } from \"../../lib/components\";\nimport { Redirect } from \"react-router-dom\";\n\ninterface Props {\n  setViewer: (viewer: Viewer) => void;\n}\n\nconst { Content } = Layout;\nconst { Title, Text } = Typography;\nexport const LogIn: FC<Props> = ({ setViewer }) => {\n  const client = useApolloClient();\n  const [\n    logIn,\n    { data: loginData, loading: logInLoading, error: logInError },\n  ] = useMutation<LogInData, LogInVariables>(LOG_IN, {\n    onCompleted: (data) => {\n      if (data && data.logIn && data.logIn.token) {\n        setViewer(data.logIn);\n        sessionStorage.setItem(\"token\",data.logIn.token)\n        displaySuccessNotification(\"You're successfully login\");\n      }\n    },\n  });\n  const logInRef = useRef(logIn);\n  useEffect(() => {\n    const code = new URL(window.location.href).searchParams.get(\"code\");\n    if (code) {\n      logInRef.current({\n        variables: {\n          input: { code },\n        },\n      });\n    }\n  }, []);\n  const handleAuth = async () => {\n    try {\n      const { data } = await client.query<AuthUrlData>({\n        query: AUTH_URL,\n      });\n      window.location.href = data.authUrl;\n    } catch (e) {\n      displayErrorMessage(\n        \"Sorry! We aren't able to log you in.Please try again later!\"\n      );\n      console.log(e);\n    }\n  };\n\n  if (logInLoading) {\n    return (\n      <div className=\"spinner-container\">\n        <Spin size=\"large\" tip=\"Logging you in....\" />\n      </div>\n    );\n  }\n\n  if (loginData && loginData.logIn) {\n    const { id: viewerId } = loginData.logIn;\n    return <Redirect to={`user/${viewerId}`} />;\n  }\n\n  const loginErrorBannerEle = logInError ? (\n    <ErrorBanner description=\"Sorry we aren't able to logged you in. Please try agian later!\" />\n  ) : null;\n  return (\n    <Row justify=\"center\">\n      <Row>\n        <Content className=\"log-in\">\n          {loginErrorBannerEle}\n          <Card className=\"log-in-card\">\n            <div className=\"log-in-card__intro\">\n              <Row justify=\"center\">\n                <Title level={3} className=\"log-in-card__intro-title\">\n                  <span role=\"img\" aria-label=\"wave\">\n                    👋🏼\n                  </span>\n                </Title>\n              </Row>\n              <Row justify=\"center\">\n                <Title level={3} className=\"log-in-card__intro-title\">\n                  Login to Xotel\n                </Title>\n              </Row>\n              <Row justify=\"center\">\n                <Text>\n                  Sign in with Google! to start booking available rentals{\" \"}\n                </Text>\n              </Row>\n              <Row justify=\"center\">\n                <button\n                  onClick={() => handleAuth()}\n                  className=\"singInButton btn btn-social btn-google\"\n                >\n                  <i className=\"fa fa-google\">\n                    <GooglePlusCircleFilled />\n                  </i>{\" \"}\n                  Sign in with Google\n                </button>\n              </Row>\n              <Col>\n                <Text type=\"warning\">\n                  Note: By Signing in , you'll be redirected to the Google\n                  consent form to sign in with your google account\n                </Text>\n              </Col>\n            </div>\n          </Card>\n        </Content>\n      </Row>\n    </Row>\n  );\n};\n","import React, { FC } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { HomeOutlined, UserOutlined, LogoutOutlined,GlobalOutlined  } from \"@ant-design/icons\";\nimport { Button, Menu, Avatar,Typography } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { Viewer } from \"../../../../lib/types\";\nimport { LOG_OUT } from \"../../../../lib/graphql/mutations/LogOut\";\nimport { LogOut as LogOutData } from \"../../../../lib/graphql/mutations/LogOut/__generated__/LogOut\";\nimport {\n  displaySuccessNotification,\n  displayErrorMessage,\n} from \"../../../../lib/utils\";\nimport LocaleReceiver from \"antd/es/locale-provider/LocaleReceiver\";\n\nconst { Item, SubMenu } = Menu;\nconst {Text} = Typography\ninterface Props {\n  viewer: Viewer;\n  setViewer: (viewer: Viewer) => void;\n}\nexport const MenuItems: FC<Props> = ({ viewer, setViewer }) => {\n  const [logOut] = useMutation<LogOutData>(LOG_OUT, {\n    onCompleted: (data) => {\n      if (data && data.logOut) {\n        setViewer(data.logOut);\n        sessionStorage.removeItem(\"token\")\n        displaySuccessNotification(\"Logout Success!\");\n      }\n    },\n    onError: (data) => {\n      displayErrorMessage(\n        \"Sorry! we weren't able to log you out. Please try again later!\"\n      );\n    },\n  });\n  const handleLogout = () => {\n    logOut();\n  };\n  const subMenuLogin =\n    viewer.id && viewer.avatar ? (\n      <SubMenu title={<Avatar src={viewer.avatar} />}>\n        <Item key=\"/user\">\n          <Link to={`/user/${viewer.id}`}>\n            <UserOutlined />\n            Profile\n          </Link>\n        </Item>\n        <Item key=\"/logout\">\n          <div onClick={handleLogout}>\n            <LogoutOutlined />\n            Logout\n          </div>\n        </Item>\n      </SubMenu>\n    ) : (\n      <Item className=\"no-border-buttom\">\n        <Link to=\"/login\">\n          <Button type=\"primary\">Sign In</Button>\n        </Link>\n      </Item>\n    );\n  return (\n    <Menu mode=\"horizontal\" selectable={false} className=\"submenu-right\">\n      <Item key=\"/host\">\n        <Link to=\"/host\">\n          <HomeOutlined />\n          Host\n        </Link>\n      </Item>\n      <SubMenu title={  <div style={{color: 'rgba(0, 0, 0, 0.65)'}}>  <GlobalOutlined /> EN</div>}>\n      <Item key=\"\">\n        <p>TH</p>\n      </Item>\n      </SubMenu>\n      {subMenuLogin}\n    </Menu>\n  );\n};\n","import React, {  useState, useEffect } from \"react\";\nimport {Input,Row,Col} from 'antd'\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport Logo from \"../../assets/logo_transparent.png\";\nimport \"./index.scss\";\nimport { Viewer } from \"../../lib/types\";\nimport { MenuItems } from \"./components\";\nimport { displayErrorMessage } from \"../../lib/utils\";\n\ninterface Props {\n  viewer: Viewer;\n  setViewer: (viewer: Viewer) => void;\n}\n\nconst {Search} = Input\n\nexport const AppHeader = withRouter(({ viewer, setViewer,location, history }: Props & RouteComponentProps) => {\n  const [search, setSearch] = useState(\"\")\n  useEffect(() => {\n    const { pathname } = location\n    const pathnameSubstr = pathname.split('/')\n    if (!pathname.includes(\"/listings\")) {\n      setSearch(\"\")\n      return;\n    }\n    if (pathname.includes(\"/listings\") && pathnameSubstr.length === 3) {\n      setSearch(pathnameSubstr[2])\n      return;\n    }\n  },[location])\n  const onSearch = (value: string) => {\n    const trimValue = value.trim();\n    if (trimValue) {\n      history.push(`/listings/${trimValue}`)\n    } else {\n      displayErrorMessage(\"Please enter a valid Search!\")\n    }\n  }\n  \n  \n  return (\n    <div className=\"menu-bar-container\">\n      <div className=\"menu-bar\">\n        <div className=\"logo\">\n          <Link to=\"/\">\n            {\" \"}\n            <img className=\"logo__img\" src={Logo} alt=\"xotel-logo\" />\n          </Link>\n\n        </div>\n        <Row style={{width: '100%'}}>\n          <Col xs={0} sm={0}  md={24} xl={24}>\n        <Search placeholder={\"Try Search 'SN. APERTMENT\"} size=\"large\"\n          className=\"menu-bar-search\"\n          onSearch={onSearch}\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          enterButton />\n          </Col>\n          </Row>\n        <MenuItems viewer={viewer} setViewer={setViewer} />\n      </div>\n    </div>\n  );\n});\n","import React, { useEffect, useRef } from 'react'\nimport {Redirect, RouteComponentProps} from 'react-router-dom'\nimport { useMutation } from '@apollo/react-hooks'\nimport {  Spin, Layout } from 'antd'\nimport { CONNECT_STRIPE } from '../../lib/graphql/mutations'\nimport {ConnectStripe as ConnectStripeData, ConnectStripeVariables} from '../../lib/graphql/mutations/ConnectStripe/__generated__/ConnectStripe'\nimport { Viewer } from '../../lib/types'\nimport { displaySuccessNotification } from '../../lib/utils'\n\ninterface Props { \n    viewer: Viewer;\n    setViewer: (viewer: Viewer) => void;\n}\n\nconst {Content} = Layout\nexport const Stripe = ({viewer,setViewer, history}:Props & RouteComponentProps) => {\n    const [connectStripe, { data, loading, error }] = useMutation<ConnectStripeData, ConnectStripeVariables>\n        (CONNECT_STRIPE, {\n            onCompleted: data => {\n                if (data && data.connectStripe) {\n                    setViewer({ ...viewer, hasWallet: data.connectStripe.hasWallet })\n                    displaySuccessNotification(\"You've successfully connected your Stripe Account\",\n                        \"You can now being to create listings in the Host page\")\n                }\n            }\n        })\n    const connectStipeRef = useRef(connectStripe)\n    useEffect(() => {\n        const code = new URL(window.location.href).searchParams.get(\"code\")\n        if (code) {\n            connectStipeRef.current({\n                variables: {input: {code}}\n            })\n        } else {\n            history.replace(\"/login\");\n        }\n    }, [history])\n    \n    if (loading) {\n        return (\n            <Content>\n                <Spin size=\"large\" tip=\"Connecting to yout Stripe account....\"/>\n            </Content>\n        )\n    }\n    if (data && data.connectStripe) {\n                return <Redirect to={`/user/${viewer.id}`}/>\n    }\n    if (error) { \n        return <Redirect to={`/user/${viewer.id}?stripe_error=true`}/>\n    }\n\n    return null;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { StripeProvider, Elements } from \"react-stripe-elements\";\nimport { ApolloProvider, useMutation } from \"react-apollo\";\nimport { Layout, Affix, Spin } from \"antd\";\nimport {\n  Home,\n  Host,\n  Listing,\n  Listings,\n  LogIn,\n  NotFound,\n  User,\n  AppHeader,\n  Stripe,\n} from \"./sections\";\nimport { LOG_IN } from \"./lib/graphql/mutations\";\nimport {\n  LogIn as LogInData,\n  LogInVariables,\n} from \"./lib/graphql/mutations/LogIn/__generated__/LogIn\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Viewer } from \"./lib/types\";\nimport { AppHeaderSkeleton, ErrorBanner } from \"./lib/components\";\n\nconst client = new ApolloClient({\n  uri: \"/api\",\n  request: async (operation) => {\n    const token = sessionStorage.getItem(\"token\");\n    operation.setContext({\n      headers: {\n        \"X-CSRF-TOKEN\": token || \"\",\n      },\n    });\n  },\n});\n\nconst initialViewer: Viewer = {\n  id: null,\n  token: null,\n  avatar: null,\n  hasWallet: null,\n  didRequest: false,\n};\nconst App = () => {\n  const [viewer, setViewer] = useState<Viewer>(initialViewer);\n  const [logIn, { error }] = useMutation<LogInData, LogInVariables>(LOG_IN, {\n    onCompleted: (data) => {\n      if (data && data.logIn) {\n        setViewer(data.logIn);\n      }\n      if (data.logIn.token) {\n        sessionStorage.setItem(\"token\", data.logIn.token);\n      } else {\n        sessionStorage.removeItem(\"token\");\n      }\n    },\n  });\n  const logInRef = useRef(logIn);\n  useEffect(() => {\n    logInRef.current();\n  }, []);\n\n  if (!viewer.didRequest && !error) {\n    return (\n      <div>\n        <AppHeaderSkeleton />\n        <div className=\"spinner-container\">\n          <Spin\n            className=\"spinner-content\"\n            size=\"large\"\n            tip=\"Launching Xotel\"\n          />\n        </div>\n      </div>\n    );\n  }\n  const logInBannerEle = error ? (\n    <ErrorBanner description=\"We aren't able to verify if you were logged in. Please try again later\" />\n  ) : null;\n  return (\n    <StripeProvider apiKey={process.env.REACT_APP_SP_PUBLISHABLE_KEY as string}>\n      <Router>\n        <Layout id=\"app\">\n          {logInBannerEle}\n          <Affix offsetTop={10}>\n            <AppHeader viewer={viewer} setViewer={setViewer} />\n          </Affix>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route\n              exact\n              path=\"/host\"\n              render={(props) => <Host {...props} viewer={viewer} />}\n            />\n            <Route\n              exact\n              path=\"/listing/:id\"\n              render={(props) => (\n                <Elements>\n                  <div>\n                  <Listing {...props} viewer={viewer} />\n                  </div>\n                </Elements>\n              )}\n            />\n            <Route exact path=\"/listings/:location?\" component={Listings} />\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) => <LogIn {...props} setViewer={setViewer} />}\n            />\n            <Route\n              exact\n              path=\"/stripe\"\n              render={(props) => (\n                <Stripe {...props} viewer={viewer} setViewer={setViewer} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/user/:id\"\n              render={(props) => (\n                <User {...props} viewer={viewer} setViewer={setViewer} />\n              )}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        </Layout>\n      </Router>\n    </StripeProvider>\n  );\n};\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/phuket.26d03af2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bkk.0c8d2d24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chaingmai.dc692a60.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ubon.3798b99a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/krabi.6452beab.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/songkhla.a94fa39f.jpeg\";"],"sourceRoot":""}